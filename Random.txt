TO Do:
CHECK ALL PERMISSIONS 
-currently users can delete others pledges!

User detail view and pledge detail view? (need to configure pledge details in urls?)

-
1. Update project user model to include project specific fields 
2. need to add a def put for customUser serializer because there's no edit/update account functionality. Do I need url?
3. Pledge detail serializer? 
4. Make a view for liked_by. If want it to be numerical, modify the pledge model.

Extra features
- use django filer for drop down search / filters..
- grand total for whole project.
-






Ways to omit specific fields in a serializer (specifically Pledge Serializer.ModelSerializer below)

# To Representation method
        # https://stackoverflow.com/questions/40700093/drf-add-exclude-fields-based-on-instances-field-values

        # def to_representation(self, obj):
        #     fields = super().to_representation(obj)
        #     # data is the serialized instance
        #     if obj.anonymous:
        #         fields.pop('supporter')
        #     return obj.supporter


 # Serializer method field 
        # https://stackoverflow.com/questions/69160252/conditional-fields-serializer-django/69160982#69160982

class PledgeSerializer(serializers.ModelSerializer): 
    supporter = serializers.SerializerMethodField()
    class Meta:
        model = Pledge
        fields = ['id', 'amount', 'comment', 'anonymous', 'project', 'supporter'] 
        read_only_fields = ['id']
        
    def get_supporter(self, obj):
        if obj.anonymous: #i.e. if anonymous = true
            return f"anonymous pledger" 
        else:
            return obj.supporter.username
    def create(self, validated_data):
        return Pledge.objects.create(**validated_data)

        Ben's refined version (bug created)? WHYYYY???

            # def get_supporter(self, obj):
    #     if obj.anonymous:
    #         return None
    #     else:
    #         return obj.supporter

Stuff I removed from CustomUser Serializer, not needed as I turned it into a ModelSerializer.
        # def update(self, instance, validated_data):
    #         instance.first_name = validated_data.get('first_name', instance.first_name),
    #         instance.last_name = validated_data.get('last_name', instance.last_name),
    #         instance.date_of_birth = validated_data.get('date_of_birth, instance.date_of_birth),
    #         instance.profile_picture = validated_data.get('profile_picture', instance.profile_picture),
    #         instance.bio = validated_data.get('bio', instance.bio),
    #         instance.country_of_residence = validated_data('country_of_residence', instance.country_of_residence),
    #         instance.highest_level_of_education = validated_data.get('highest_level_of_education', instance.highest_level_of_education),
    #         instance.username = validated_data.get('username', instance),
    #         instance.email = validated_data('email'], 


**CustomUser post method, if statement to avoid having issues with set_password. 
Ben's code (must be under a def update).
if password := validated_data.get('password')
        instance.set_password = password

instance.save()
return instance